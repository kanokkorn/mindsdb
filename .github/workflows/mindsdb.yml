name: MindsDB workflow

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
        include:
          - os: macos-latest
            python-version: 3.7
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir .
    - name: Run integration api and flow tests
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          cd tests/docker
          docker-compose -f docker-compose.yml up -d
          cd ../..
          pip install -r requirements_test.txt
          # maybe use TestSuite addTest 
          python tests/integration_tests/flows/test_custom_model.py
          python tests/integration_tests/flows/test_clickhouse.py
          python tests/integration_tests/flows/test_mariadb.py
          python tests/integration_tests/flows/test_mysql.py
          python tests/integration_tests/flows/test_postgres.py
          python tests/integration_tests/flows/test_mongo.py
          sleep 61
          python tests/integration_tests/api/test_http.py
          cd tests/docker
          docker-compose down
        fi
      shell: bash

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/stable' && github.actor != 'mindsdbadmin'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME:  __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist
        twine upload dist/*

    - name: Build and push mindsdb Docker image
      uses: docker/build-push-action@v1
      with:
        dockerfile: distributions/docker/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: mindsdb/mindsdb
        tag_with_ref: true


    # Maybe use different build, we need windows here
    # - name: Build windows installer
    #   run: |
    #     mkdir -p build
    #     cd /distributions/windows
    #     ./make.bat
    #
    #   - name: Build linux installer
    #    run: |
    #     mkdir -p build
    #     mv dist/install.exe ../../build/
    #     cp distributions/linux/install.sh build/

    # - name: Sync installer to s3
    #   uses: jakejarvis/s3-sync-action@master
    #   with:
    #     args: --acl public-read --follow-symlinks --delete
    #   env:
    #     AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_REGION: 'us-west-2'
    #     SOURCE_DIR: 'build'
    #     DEST_DIR: 'mindsdb-installer'
